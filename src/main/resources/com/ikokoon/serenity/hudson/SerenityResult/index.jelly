<?jelly escape-by-default='false'?>
<j:jelly trim="false" xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
	<l:layout>
		<st:include it="${it.owner}" page="sidepanel.jelly" />
		<l:main-panel>

			<link rel="stylesheet" type="text/css" href="${rootURL}/plugin/serenity/js/checktree.css" />
			<script type="text/javascript" src="${rootURL}/plugin/serenity/js/checktree.js" />
			<script type="text/javascript" src="${rootURL}/plugin/serenity/js/serenity.js" />
			<script type="text/javascript" src="${rootURL}/plugin/serenity/js/base64.js" />

			<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

			<script type="text/javascript">
			    var serenityResult = <st:bind value="${it}" />

 				// Load the Visualization API and the corechart package. Callback that creates and populates
 				// a data table, instantiates the chart, passes in the data and draws it.
			    google.charts.load('current', {'packages':['corechart']});
			    google.charts.setOnLoadCallback(drawChart);

 				var packages = new CheckTree('packages');

                function drawChart() {
                  for (var i in CheckTree.list) {
                    CheckTree.list[i].init()
                  }
                  // alert('Width : ' + options.width);
                }

                window.onload = setTimeout(function() {
                	getModel('com.ikokoon.serenity.model.Project', '${it.project.id}');
                }, 1000);
                window.onresize = drawChart;

                function getModel(klass, identifier, e) {
                	serenityResult.getModel(klass, identifier, function(t) {
                		var model = t.responseObject();
                		// alert('Model : ' + model);

                		setTimeout(function() {
                        	// Instantiate and draw our chart, passing in some options.
                            var chart = new google.visualization.ComboChart(document.getElementById('chart_div'));
                            var data = new google.visualization.DataTable(model);
                            // Set chart options - 'width':650,
                            var options = {
                            	title:'Project metrics',
	                            vAxis: {title: 'Values'},
   		                        hAxis: {title: 'Builds'},
   	                         	seriesType: 'bars',
   	                         	series: {0: {type: 'line'}},
   	                         	legend: { position: 'bottom' },
   	                         	curveType: 'function',
   	                         	height:310
                            };
                            chart.draw(data, options);
                        }, 100);
                	});
                	// Stops the tree from opening the node
                    if (!e) {
                    	var e = window.event;
                    	if (e !== undefined) {
                    		e.cancelBubble = true;
                    		if (e.stopPropagation) {
                    			e.stopPropagation();
                    		}
                    	}
                    }
                };

                function getSource(identifier) {
                  getModel('com.ikokoon.serenity.model.Class', identifier);
                  serenityResult.getSource('com.ikokoon.serenity.model.Class', identifier, function(t) {
                	  var source = t.responseObject();
                	  setTimeout(function() {
                	  	var sourceDecoded = base64Decode(source);
                	  	var sourceElement = document.getElementById('source');
                	  	// alert(sourceElement + ':' + sourceElement.innerHTML + ':' + sourceDecoded);
                  	  	// sourceElement.innerHTML = 'Some other fucking source!' + identifier;
                  	  	sourceElement.innerHTML = sourceDecoded;
                	  }, 100);
                  });
                };
 			</script>

			<table border="0" width="100%">
				<tr>
					<td colspan="2">
						<h3>
							<a href="#" onclick="JavaScript:getModel('com.ikokoon.serenity.model.Project', '${it.project.id}');">
								<img src="${rootURL}/plugin/serenity/icons/project.gif" alt="The Serenity Report Icon" title="Serenity Graph" />
								Project : ${it.name}
							</a>
							<b title="Coverage, complexity, stability, packages, classes, methods, lines" style="font-size: 10px;">
								(coverage : ${it.project.coverage}, complexity :
								${it.project.complexity}, stability : ${it.project.stability},
								[${it.project.packages}, ${it.project.classes}, ${it.project.methods}, ${it.project.lines}])</b>
						</h3>
					</td>
				</tr>
				<tr>
					<td valign="top" nowrap="nowrap">
						<div style="width : 400px; height: 650px; overflow : scroll;">
							<j:set var="ACC_DEFAULT" value="0" />
							<j:set var="ACC_PUBLIC" value="1" />
							<j:set var="ACC_PRIVATE" value="2" />
							<j:set var="ACC_PROTECTED" value="4" />			
									
							<ul id="tree-packages" class="checktree">
							<j:forEach var="package" items="${it.packages}">
								<li id="show-classes-${package.name}">
									<img src="${rootURL}/plugin/serenity/js/imgs/package.gif" />
									<a 
										href="#" 
										onClick="JavaScript:getModel('com.ikokoon.serenity.model.Package', '${package.id}')"
										style="text-decoration : none;">&#160;
										${package.name} (${package.coverage},${package.complexity},${package.stability})
									</a>
									
									<ul id="tree-classes-${package.name}">
									<j:forEach var="klass" items="${package.children}">
										<li id="show-inner-and-methods-${klass.name}">
											<j:set var="classIcon" value="class.gif" />
											<j:if test="${(klass.access &amp; ACC_PUBLIC) != ACC_PUBLIC}">
   		 									<j:set var="classIcon" value="class_default.gif" />
											</j:if>
											<img src="${rootURL}/plugin/serenity/js/imgs/${classIcon}" />
											<a 
												href="#" 
												onClick="JavaScript:getSource('${klass.id}');"
												style="text-decoration : none;">&#160;
													${klass.name} (${klass.coverage},${klass.complexity},${klass.stability},${klass.access})
											</a>
											
											<ul id="tree-inner-and-methods-${klass.name}">
											<j:forEach var="innerKlass" items="${klass.innerClasses}">
												<li>
													<j:set var="innerClassIcon" value="innerclass_public_obj.gif" />
													<j:if test="${(innerKlass.access &amp; ACC_PRIVATE) == ACC_PRIVATE}">
   			 											<j:set var="innerClassIcon" value="innerclass_private_obj.gif" />
													</j:if>
													<j:if test="${(innerKlass.access &amp; ACC_DEFAULT) == ACC_DEFAULT}">
   			 											<j:set var="innerClassIcon" value="innerclass_default_obj.gif" />
													</j:if>
													<j:if test="${(innerKlass.access &amp; ACC_PROTECTED) == ACC_PROTECTED}">
   		 												<j:set var="innerClassIcon" value="innerclass_protected_obj.gif" />
													</j:if>
													<j:if test="${(innerKlass.access &amp; ACC_PUBLIC) == ACC_PUBLIC}">
   		 												<j:set var="innerClassIcon" value="innerclass_public_obj.gif" />
													</j:if>
													
													<img src="${rootURL}/plugin/serenity/js/imgs/${innerClassIcon}" />
													${innerKlass.name} (${innerKlass.coverage},${innerKlass.complexity},${innerKlass.stability})
												</li>
											</j:forEach>
												
											<j:forEach var="method" items="${klass.children}">
												<li>
													<j:set var="methodIcon" value="methpub_obj.gif" />
													<j:if test="${(method.access &amp; ACC_PRIVATE) == ACC_PRIVATE}">
   	 													<j:set var="methodIcon" value="methpri_obj.gif" />
													</j:if>
													<j:if test="${(method.access &amp; ACC_DEFAULT) == ACC_DEFAULT}">
   	 													<j:set var="methodIcon" value="methdef_obj.gif" />
													</j:if>
													<j:if test="${(method.access &amp; ACC_PROTECTED) == ACC_PROTECTED}">
   	 													<j:set var="methodIcon" value="methpro_obj.gif" />
													</j:if>
													<j:if test="${(method.access &amp; ACC_PUBLIC) == ACC_PUBLIC}">
   	 													<j:set var="methodIcon" value="methpub_obj.gif" />
													</j:if>
													<img src="${rootURL}/plugin/serenity/js/imgs/${methodIcon}" />
													${method.name} (${method.coverage},${method.complexity})
												</li>
											</j:forEach>
											</ul>
										</li>
									</j:forEach>
									</ul>
								</li>
							</j:forEach>
							</ul>
						</div>
					</td>

					<td valign="top" align="left" width="100%">
						<div id="chart_div"></div>
						<div id="page-break" style="width: 100%; height: 20px; overflow: auto" />
						<div id="source" style="width: 100%; height: 500px; overflow: auto">
						<!-- Source to be replaced in JavaScript -->
						</div>
					</td>

				</tr>
			</table>
		</l:main-panel>
	</l:layout>
</j:jelly>